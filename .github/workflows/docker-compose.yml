name: Deploy with Docker to AWS ECS

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to AWS ECR (Elastic Container Registry)
      - name: Log in to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-aws-repo/my-django-app .

      # Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker tag my-aws-repo/my-django-app:latest ${{ secrets.AWS_ECR_URI }}:latest
          docker push ${{ secrets.AWS_ECR_URI }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure build job completes before deploy
    steps:
      # Checkout code again (if needed)
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to AWS
      - name: Log in to AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}  # Ensure you set this in GitHub secrets

      # Deploy the Docker container to ECS
      - name: Deploy to AWS ECS
        run: |
          ecs-cli configure --region ${{ secrets.AWS_REGION }} --access-key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret-key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --cluster my-cluster
          ecs-cli compose --file docker-compose.yml up

      # Notify Success (Optional)
      - name: Notify Success (Optional)
        run: echo "Deployment successful!"
